create table public.user_entity
(
    id                 bigint generated by default as identity primary key,
    create_date        timestamp   default now(),
    email              varchar(50)                              not null unique,
    username           varchar(50)                              not null unique,
    encrypted_password varchar(100)                             not null,
    first_name         varchar(50),
    last_name          varchar(50),
    display_name       varchar(50) default 'defaultDisplayName' not null
);

create table public.refresh_token
(
    id          bigint generated by default as identity primary key,
    create_date timestamp    not null,
    token       varchar(512) not null unique,
    expiry_date timestamp    not null,
    user_id     bigint,
    constraint fk_refresh_token_user foreign key (user_id) references user_entity (id)
);

create table public.project
(
    id          bigint generated by default as identity
        primary key,
    create_date timestamp default now(),
    name        varchar(50) not null,
    description varchar(512),
    owner_id    bigint
        constraint fk_project_user
            references public.user_entity
);

create table public.role
(
    id          bigint generated by default as identity
        primary key,
    create_date timestamp default now() not null,
    name        varchar(50)             not null,
    description varchar(200)
);

create table public.project_user_role
(
    role_id    bigint not null
        constraint fk_role_id
            references public.role
            on delete cascade,
    user_id    bigint not null
        constraint fk_user_id
            references public.user_entity
            on delete cascade,
    project_id bigint not null
        constraint fk_project_id
            references public.project
            on delete cascade
);

create table public.file_entity
(
    id           bigint generated by default as identity
        primary key,
    create_date  timestamp default now() not null,
    user_id      bigint                  not null
        constraint fk_user_id
            references user_entity,
    entity_id    bigint,
    name         varchar(100)            not null,
    entity_type  varchar(50)             not null,
    content_type varchar(50)             not null,
    file_path    varchar(100)            not null,
    file_urn     varchar(100)            not null
);

create or replace view v_user
as
select u.id                 as "id"
     , u.create_date        as "createDate"
     , u.email              as "email"
     , u.username           as "username"
     , u.encrypted_password as "encryptedPassword"
     , u.first_name         as "firstName"
     , u.last_name          as "lastName"
     , u.display_name       as "displayName"
     , fe.id                as "userPicId"
     , fe.file_urn          as "userPicUrn"
from user_entity u
         left join file_entity fe
                   on fe.user_id = u.id
                       and fe.entity_type = 'USER_PIC';
;


-- INSERT INTO public.user_entity (id,
--                                 create_date,
--                                 email,
--                                 username,
--                                 encrypted_password,
--                                 first_name,
--                                 last_name,
--                                 display_name)
-- VALUES (1,
--         NOW(),
--         'testuser1@example.com',
--         'testuser1',
--         '$2a$10$abcdefghijklmnopqrstuv', -- пример зашифрованного пароля
--         'Test',
--         'User',
--         'TestUserDisplay');
