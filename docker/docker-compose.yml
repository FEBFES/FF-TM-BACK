version: '3.9'

name: ff-tm-back
services:
  postgres:
    image: postgres:13.3
    container_name: postgres-ff-tm
    restart: always
    env_file:
      .env
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  ff-tm-back:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    ports:
      - "8090:8090"
    env_file:
      .env
    volumes:
      - febfes-files:/home/app/files
      - febfes-userPics:/home/app/files/userPics
    depends_on:
      - postgres

  notification-service:
    build:
      context: ../
      dockerfile: docker/Dockerfile-notification-service
    ports:
      - "8091:8091"
    env_file:
      .env
    depends_on:
      - postgres

  api-gateway:
    build:
      context: ../
      dockerfile: docker/Dockerfile-api-gateway
    ports:
      - "8061:8061"
    env_file:
      .env
    depends_on:
      - postgres

  vault:
    container_name: "ff-tm-vault"
    image: hashicorp/vault:latest
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "00000000-0000-0000-0000-000000000000"
    ports:
      - "8200:8200"

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
    ports:
      - "15672:15672"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8040:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=PLAINTEXT://kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - kafka
      - zookeeper

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - zipkin

networks:
  zipkin:
    driver: bridge

volumes:
  febfes-files:
  febfes-userPics:
  db-data:
